# frozen_string_literal: true

require "active_support/core_ext/integer/time"
require "rack-livereload"

Rails.application.configure do # rubocop:disable Metrics/BlockLength
  # Settings specified here will take precedence over those in config/application.rb.

  # Pass in an env variable ASSETS_COMPILED_LIKE_IN_PROD=true
  # to test with assets precompiled, like in prod.
  # This will also run the precompilation for you
  # on first boot. NB: This way, you might have to
  # manually precompile assets to see changes made
  # after the app was booted.
  if ENV["ASSETS_COMPILED_LIKE_IN_PROD"].present?
    config.assets.compile = false
    config.serve_static_files = true
    system("rake precompile_assets_once")
  end

  # If we precompile in dev, we want it in it's own folder - not mixed with test or prod assets
  config.assets.prefix = "/assets-dev"

  # In the development environment your application's code is reloaded any time
  # it changes. This slows down response time but is perfect for development
  # since you don't have to restart the web server when you make code changes.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing.
  config.server_timing = true

  # Enable/disable caching. By default caching is disabled.
  # Run rails dev:cache to toggle caching.
  if Rails.root.join("tmp/caching-dev.txt").exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true

    config.cache_store = :solid_cache_store
    config.public_file_server.headers = {
      "Cache-Control" => "public, max-age=#{2.days.to_i}"
    }
  else
    config.action_controller.perform_caching = false

    config.cache_store = :null_store
  end

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # This will open all sent emails in a new tab in the browser
  config.action_mailer.delivery_method = :letter_opener
  config.action_mailer.default_url_options = { host: "localhost:3000" }
  config.action_mailer.perform_deliveries = true
  config.action_mailer.raise_delivery_errors = true
  config.action_mailer.perform_caching = false

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise exceptions for disallowed deprecations.
  config.active_support.disallowed_deprecation = :raise

  # Tell Active Support which deprecation messages to disallow.
  config.active_support.disallowed_deprecation_warnings = []

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Use Solid Queue in Development.
  config.active_job.queue_adapter = :solid_queue

  # Suppress logger output for asset requests.
  config.assets.quiet = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  Rails.application.routes.default_url_options[:host] = "localhost:3000"

  # Allow IP from Docker
  # Check if we use Docker to allow docker ip through web-console
  config.web_console.whitelisted_ips = ["10.0.0.0/8", "172.16.0.0/12", "192.168.0.0/16"] if ENV["DOCKERIZED"] == "true"

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  config.generators.apply_rubocop_autocorrect_after_generate!

  # Live reload without browser extension:
  config.middleware.insert_after ActionDispatch::Static, Rack::LiveReload

  # Dev server through serveo:
  config.hosts << "lokaler.serveo.net"
end
